(LET 
    (
        (@MAP (QUOTE (LAMBDA (FN LI)
            (COND
                ((EQ (QUOTE ()) LI) (QUOTE ()))
                ((QUOTE T) (CONS
                    (FN (CAR LI))
                    (@MAP FN (CDR LI))
                ))
            )
        )))

        (@Q (QUOTE (LAMBDA (X) 
            (COND
                ((ATOM X) X)
                ((QUOTE T)
                    (CONS (QUOTE QUOTE)
                    (CONS (@MAP @Q X) (QUOTE ()))))
            )
        )))
    )

    (@Q (QUOTE (A (B C))))
)
    (@MAP (QUOTE (LAMBDA (X) (CONS X X))) (QUOTE (1 2 3)))



    ;; (ID (QUOTE (A B C)))
    (@Q (QUOTE ( ABC DEF GHI)))

        (ID (QUOTE (LAMBDA (X)
            (COND
                ((EQ (QUOTE ()) X) X)
                ((QUOTE T) (CONS X X))
            ) 
        )))


        (CONSUME-EXPR (QUOTE (LAMBDA (E)
            (LET
                (
                    (LA (CAR E))
                    (TAIL (CDR E))
                )
                (COND
                    ((EQ (QUOTE let) LA)
                        (CONSUME-LET TAIL))
                    ((EQ (QUOTE [) LA)
                        (CONSUME-ARITH TAIL))
                    ((ATOM LA) LA)
                )
            )
        )))

        (Z (QUOTE (LAMBDA (E) (CAR E))))

        (PGM (QUOTE (n)))

    (COND
        ((EQ (QUOTE ()) (QUOTE (A B C)) ) ())
        ((QUOTE T) (CONS
                    (FN (CAR LI))
                    (@MAP (CDR LI))
                ))
            )


(LET 
    (
        (QQ (QUOTE (LAMBDA (X) (QUOTE (QUOTE X)))))
    )
    (QQ (QUOTE ABC))
)
    
(
    (LAMBDA (X) (QUOTE (QUOTE X)))
    (QUOTE ABC)
)


(LET
    ((DQUOTE. (LAMBDA (REC X) (
            (COND
                ((ATOM (QUOTE X))
                    (QUOTE (QUOTE X)))
                ;; ((QUOTE T)
                ;;     (QUOTE ((REC (CAR X)) (REC (CDR X))))) 
            )
        ))))
(LET
    ((DQUOTE (LAMBDA (X)
        (DQUOTE. (QUOTE DQUOTE.) (QUOTE X)))))

    (DQUOTE (QUOTE A))

))
