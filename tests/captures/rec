(
    ()
    ((fact (lambda (fact) (lambda (n s) (cond
            ((eq? 1 n) 1)
            (#t (* n ((fact fact) (- n s) s))) 
        )))))
    ((fact (lambda (fact) (lambda (n s) (cond
            ((eq? 1 n) 1)
            (#t (* n ((fact fact) (- n s) s))) 
        )))))
    ((fact (lambda (fact) (lambda (n s) (cond
            ((eq? 1 n) 1)
            (#t (* n ((fact fact) (- n s) s))) 
        )))))
)

(let
    (
        (fact (lambda (fact) (lambda (n s) (cond
            ((eq? 1 n) 1)
            (#t (* n ((fact fact) (- n s) s))) 
        ))))

        (fact (fact fact))
    )
    (fact 5 2)
)
15
